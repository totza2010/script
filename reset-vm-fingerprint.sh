#!/bin/bash
set -euo pipefail

VMID=""
STORAGE_NAME="local-lvm"
DISK_ENTRY="scsi0"
BRIDGE="vmbr0"
TIMEOUT=60

print_header() { echo -e "\n\033[1;36m=== $1 ===\033[0m"; }
error_exit() { echo -e "\n\033[0;31m[ERROR] $1\033[0m"; exit 1; }
success() { echo -e "\033[0;32m[SUCCESS] $1\033[0m"; }
info() { echo -e "\033[0;34m[INFO] $1\033[0m"; }

ask_vmid() {
  echo "üñ•Ô∏è  VM ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏ô Proxmox:"
  qm list
  echo
  read -p "üîß ‡πÉ‡∏™‡πà VMID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ reset fingerprint: " VMID
  [[ -z "$VMID" ]] && error_exit "VMID ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤"
}

check_vm_exists() {
  qm config "$VMID" > /dev/null 2>&1 || error_exit "‡πÑ‡∏°‡πà‡∏û‡∏ö VMID: $VMID"
}

shutdown_vm_if_running() {
  local status
  status=$(qm status "$VMID" | awk '{print $2}')
  if [[ "$status" == "running" ]]; then
    print_header "VM ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà"
    read -p "‚ùì ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î VM ‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? [y/N] " confirm
    if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
      error_exit "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î VM ‚Äî ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
    fi
    info "‡∏™‡∏±‡πà‡∏á‡∏õ‡∏¥‡∏î VM..."
    qm shutdown "$VMID"
    echo -n "‚è≥ ‡∏£‡∏≠ VM ‡∏õ‡∏¥‡∏î"
    for ((i = 0; i < TIMEOUT; i++)); do
      sleep 1
      echo -n "."
      status=$(qm status "$VMID" | awk '{print $2}')
      if [[ "$status" == "stopped" ]]; then
        echo
        success "VM ‡∏õ‡∏¥‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"
        return
      fi
    done
    echo
    error_exit "VM ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô $TIMEOUT ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ"
  else
    success "VM ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
  fi
}

safe_write_uuid_into_config() {
  local config="/etc/pve/qemu-server/$VMID.conf"
  local backup="${config}.bak.$(date +%s)"
  local tmp="/tmp/${VMID}.conf.tmp.$RANDOM"

  cp "$config" "$backup"
  info "‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå config -> $backup"

  # ‡πÄ‡∏≠‡∏≤ uuid= ‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡∏ß‡∏≤‡∏á uuid ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å
  grep -v '^uuid=' "$config" > "$tmp"
  {
    echo "uuid=$1"
    cat "$tmp"
  } > "${config}.new"

  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö parse ‡∏Å‡πà‡∏≠‡∏ô (qm config ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà /etc/pve/qemu-server/VMID.conf)
  # ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‚Äî ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö atomic: ‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
  mv "${config}.new" "$config"
  if qm config "$VMID" > /dev/null 2>&1; then
    success "UUID ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: $1"
  else
    # restore backup ‡∏ñ‡πâ‡∏≤ parse ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô
    mv "$backup" "$config"
    rm -f "$tmp" || true
    error_exit "‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï config ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‚Äî ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ config ‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏•‡πâ‡∏ß"
  fi

  rm -f "$tmp" || true
}

reset_fingerprint() {
  print_header "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï UUID, MAC, ‡πÅ‡∏•‡∏∞ Disk Serial"

  NEW_UUID=$(uuidgen)
  NEW_MAC=$(hexdump -n3 -e '/1 ":%02X"' /dev/random)
  NEW_MAC="52:54:00${NEW_MAC}"
  NEW_DISK_SERIAL="DISK$(openssl rand -hex 4 | tr 'a-f' 'A-F')"

  safe_write_uuid_into_config "$NEW_UUID"

  qm set "$VMID" --net0 e1000="$NEW_MAC",bridge="$BRIDGE"
  success "MAC Address ‡πÉ‡∏´‡∏°‡πà: $NEW_MAC"

  qm set "$VMID" --$DISK_ENTRY ${STORAGE_NAME}:vm-$VMID-disk-0,serial=$NEW_DISK_SERIAL
  success "Disk Serial ‡πÉ‡∏´‡∏°‡πà: $NEW_DISK_SERIAL"
}

final_message() {
  print_header "üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå"
  echo "‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏π‡∏ï VM ID: $VMID ‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PHPMaker ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ"
}

# === MAIN ===
print_header "‚öôÔ∏è Proxmox VM Fingerprint Reset Tool (fixed uuid write)"
ask_vmid
check_vm_exists
shutdown_vm_if_running
reset_fingerprint
final_message
