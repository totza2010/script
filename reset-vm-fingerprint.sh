#!/bin/bash

# === CONFIG ===
VMID=""
STORAGE_NAME="local-lvm"
DISK_ENTRY="scsi0"
BRIDGE="vmbr0"
TIMEOUT=60
# ==============

print_header() {
  echo -e "\n\033[1;36m=== $1 ===\033[0m"
}

error_exit() {
  echo -e "\n\033[0;31m[ERROR] $1\033[0m"
  exit 1
}

success() {
  echo -e "\033[0;32m[SUCCESS] $1\033[0m"
}

info() {
  echo -e "\033[0;34m[INFO] $1\033[0m"
}

ask_vmid() {
  echo "üñ•Ô∏è  VM ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏ô Proxmox:"
  qm list
  echo
  read -p "üîß ‡πÉ‡∏™‡πà VMID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ reset fingerprint: " VMID
  [[ -z "$VMID" ]] && error_exit "VMID ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤"
}

check_vm_exists() {
  qm config "$VMID" > /dev/null 2>&1 || error_exit "‡πÑ‡∏°‡πà‡∏û‡∏ö VMID: $VMID"
}

shutdown_vm_if_running() {
  local status=$(qm status "$VMID" | awk '{print $2}')
  if [[ "$status" == "running" ]]; then
    print_header "VM ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà"

    read -p "‚ùì ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î VM ‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? [y/N] " confirm
    if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
      error_exit "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î VM ‚Äî ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
    fi

    info "‡∏™‡∏±‡πà‡∏á‡∏õ‡∏¥‡∏î VM..."
    qm shutdown "$VMID"

    echo -n "‚è≥ ‡∏£‡∏≠ VM ‡∏õ‡∏¥‡∏î"
    for ((i = 0; i < TIMEOUT; i++)); do
      sleep 1
      echo -n "."
      status=$(qm status "$VMID" | awk '{print $2}')
      if [[ "$status" == "stopped" ]]; then
        echo
        success "VM ‡∏õ‡∏¥‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"
        return
      fi
    done

    echo
    error_exit "VM ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô $TIMEOUT ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ"
  else
    success "VM ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
  fi
}

reset_fingerprint() {
  print_header "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï UUID, MAC, ‡πÅ‡∏•‡∏∞ Disk Serial"

  NEW_UUID=$(uuidgen)
  NEW_MAC=$(hexdump -n3 -e '/1 ":%02X"' /dev/random)
  NEW_MAC="52:54:00${NEW_MAC}"
  NEW_DISK_SERIAL="DISK$(openssl rand -hex 4 | tr 'a-f' 'A-F')"

  CONFIG_FILE="/etc/pve/qemu-server/$VMID.conf"

  if grep -q "^uuid=" "$CONFIG_FILE"; then
    sed -i "s/^uuid=.*/uuid=$NEW_UUID/" "$CONFIG_FILE"
  else
    echo "uuid=$NEW_UUID" >> "$CONFIG_FILE"
  fi
  success "UUID ‡πÉ‡∏´‡∏°‡πà: $NEW_UUID"

  qm set "$VMID" --net0 e1000="$NEW_MAC",bridge="$BRIDGE"
  success "MAC Address ‡πÉ‡∏´‡∏°‡πà: $NEW_MAC"

  qm set "$VMID" --$DISK_ENTRY ${STORAGE_NAME}:vm-$VMID-disk-1,serial=$NEW_DISK_SERIAL
  success "Disk Serial ‡πÉ‡∏´‡∏°‡πà: $NEW_DISK_SERIAL"
}

final_message() {
  print_header "üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå"
  echo "‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏π‡∏ï VM ID: $VMID ‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PHPMaker ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏° trial ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ"
}

# === MAIN ===
print_header "‚öôÔ∏è Proxmox VM Fingerprint Reset Tool"

ask_vmid
check_vm_exists
shutdown_vm_if_running
reset_fingerprint
final_message
